<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-4.2.xsd
        http://www.springframework.org/schema/util
  		http://www.springframework.org/schema/util/spring-util-4.2.xsd"> 
	
		<!-- 使用注解开发，不用配置controller，需要配置一个组件扫描器 -->  
        <context:component-scan base-package="com.security.controller,com.security.entry,com.security.dao,com.security.mapper,com.security.service"/>
        <!-- 视图解析器 -->                
<!--         <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--             配置从项目根目录到指定目录一端路径 ,建议指定浅一点的目录 -->
<!--             <property name="prefix" value="/WEB-INF/jsp/"></property> -->
<!--             文件的后缀名 -->
<!--             <property name="suffix" value=".jsp"></property> -->
<!--         </bean> -->

<!-- 	<util:properties id="appProperties" location="classpath:app.properties"></util:properties> -->
<!-- 	<bean id="propertyConfigurer" class ="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"> -->
<!-- 		<property name="properties" ref="appProperties"></property> -->
<!-- 	</bean> -->

	<import resource="spring-security.xml"/>

	<bean id="app" class ="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:app.properties</value>
			</list>
		</property>
	</bean>


	    <bean id="viewResolver" abstract="true">
	        <property name="attributes">
	            <props>
	                <prop key="resRoot">${allways.cc.resRoot}</prop>
	                <prop key="pageTitle">${allways.cc.pageTitle}</prop>
	            </props>
	        </property>
	    </bean>
        
        <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" parent="viewResolver">
	        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	        <property name="prefix" value="/WEB-INF/jsp/"/><!--设置JSP文件的目录位置-->
	        <property name="suffix" value=".jsp"/>
	        <property name="contentType" value="text/html;charset=utf-8"/>
	    </bean>
        
<!--           <bean id="jdbcDataSource" class ="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 		   	<property name = "driverClassName" value ="com.mysql.jdbc.Driver"></property> -->
<!-- 		   	<property name = "url" value ="jdbc:mysql://localhost:3306/sqltestdb"></property> -->
<!-- 		   	<property name = "username" value ="root"></property> -->
<!-- 		   	<property name = "password" value ="123456"></property> -->
<!-- 		   </bean> -->
		   
		   <bean id="jdbcDataSource" class ="org.springframework.jdbc.datasource.DriverManagerDataSource">
		   	<property name = "driverClassName" value ="com.ibm.db2.jcc.DB2Driver"></property>
		   	<property name = "url" value ="jdbc:db2://localhost:50000/mydb"></property>
		   	<property name = "username" value ="acer"></property>
		   	<property name = "password" value ="123456"></property>
		   </bean>
		   
		  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
		     <property name="dataSource" ref="jdbcDataSource" />  
		     <property name="mapperLocations" value="classpath:com/security/mapper/*.xml"></property>  
		  </bean>  
		  
		<!-- DAO接口所在包名，Spring会自动查找其下的类 ,自动扫描了所有的XxxxMapper.xml对应的mapper接口文件,只要Mapper接口类和Mapper映射文件对应起来就可以了-->  
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	        <property name="basePackage" value="com.security.dao" />  
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
	    </bean>  
	    
	    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
		<!-- 配置事务管理器 -->
<!-- 	    <bean id="transactionManager"   -->
<!-- 	        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   -->
<!-- 	        <property name="dataSource" ref="dataSource" />   -->
<!-- 	    </bean>  -->
	
<!-- 	    ======= 事务配置 End =================== -->
<!-- 	    配置基于注解的声明式事务 -->
<!-- 	    enables scanning for @Transactional annotations -->
<!-- 	    <tx:annotation-driven transaction-manager="transactionManager" /> -->

		<!-- 	上传文件解析器   -->
	     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	        <property name="defaultEncoding" value="utf-8"/>  
	        <property name="maxUploadSize" value="10485760000"/>  
	        <property name="maxInMemorySize" value="40960"/>  
	     </bean> 
	     <!-- 	jackson转换bean   -->
	       <bean
		        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		        <property name="messageConverters">
		            <util:list id="beanList">
		                <ref bean="mappingJacksonHttpMessageConverter" />
		            </util:list>
		        </property>
		    </bean>
		    <bean id="mappingJacksonHttpMessageConverter"
		        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		        <property name="supportedMediaTypes">
		            <list>
		                <value>text/html;charset=UTF-8</value>
		            </list>
		        </property>
		    </bean>
		    
	<!-- 定义定时任务 -->  
    <bean id="SpringQtzJob" class="com.security.task.MailTask"/>  
    <bean id="SpringQtzJobMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	    <property name="targetObject">  
	        <ref bean="SpringQtzJob"/>  
	    </property>  
	    <property name="targetMethod">  <!-- 要执行的方法名称 -->  
	        <value>sendMail</value>  
	    </property>  
	</bean>  
	
	<!-- ======================== 调度触发器 ======================== -->  
	<bean id="CronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	    <property name="jobDetail" ref="SpringQtzJobMethod"></property>  
	    <property name="cronExpression" value="* * 9 * * ?"></property>  
	</bean>  
	<!-- ======================== 调度工厂 ======================== -->  
	<bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	    <property name="triggers">  
	        <list>  
	            <ref bean="CronTriggerBean"/>  
	        </list>  
	    </property>  
	</bean>   

</beans>